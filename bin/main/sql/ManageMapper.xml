<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="manage">
	<!-- 유저 리스트 시작 -->
	<select id="getUserList" resultType="wh.admin.manage.model.MemberDto" parameterType="wh.admin.manage.model.FilterDto">
		select * from members 
		<where>
		<if test='filter == "nickname"'>
		  nickname
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%')
 		</if>
 		and level in (1,2)
		</where>
		order by join_date limit #{start},10
	</select>
	
	<select id="getUserCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from members
		<where>
		<if test='filter == "nickname"'>
		  nickname
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
		and level in(1,2)
		</where>
	</select>
	
	<!-- 유저 리스트 끝 -->
	
	<!-- 셰프 리스트 시작 -->
	<select id="getChefList" resultType="wh.admin.manage.model.ChefDto" parameterType="wh.admin.manage.model.FilterDto">
		select * from members m join chef c where m.member_id = c.chef 
		<where>
		<if test='filter == "nickname"'>
		 and nickname 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "member_id"'>
		 and member_id 
		  like CONCAT('%',#{search},'%')
 		</if>	
		</where>
		order by date limit #{start}, 10
	</select>

	<select id="getChefCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from members m natural join chef c where m.member_id = c.chef
		<where>
		<if test='filter == "nickname"'>
		 and nickname 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "member_id"'>
		 and member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
		</where>
	</select> 
	
	<!-- 셰프 리스트 끝 -->
	
	<!-- 탈퇴자 리스트 시작 -->
	<insert id="insertDrop" parameterType="wh.admin.manage.model.DropMembersDto">
		insert into Drop_members(member_id,nickname) values(#{member_id},#{nickname})
	</insert>
	
	<select id="getDropList" resultType="wh.admin.manage.model.DropMembersDto" parameterType="wh.admin.manage.model.FilterDto">
		select * from drop_members
		<where>
		<if test='filter == "nickname"'>
		 nickname 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "member_id"'>
		 and member_id 
		  like CONCAT('%',#{search},'%')
 		</if>	
		</where>
		order by drop_date limit #{start}, 10
	</select>
	
	<select id="getDropCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from drop_members
		<where>
		<if test='filter == "nickname"'>
		  nickname
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
		</where>
	</select>
	
	<!-- 탈퇴자 리스트 끝 -->
	
	<!-- 회원정보 수정 -->
	<update id="updateUser" parameterType="map">
		update members set nickname=#{nickname} where member_id = #{member_id}
	</update>
	
	<delete id="deleteUser" parameterType="string">
		delete from members where member_id = #{member_id}
	</delete>
	<!-- 회원정보 수정 끝 -->
	
	<!-- 셰프 정보 수정 -->
	<update id="updateChef" parameterType="map">
		update chef set tel = #{tel}, sns_address=#{sns_address} where chef=#{member_id}
	</update>
	
	<delete id="deleteChef" parameterType="string">
		delete from chef where chef=#{member_id}
	</delete>
	<!-- 셰프 정보 수정 끝 -->
	
	<!-- 셰프 신청서 리스트 -->
	<select id="getChefApplyCount" resultType="int">
		select count(*) from chef_apply
	</select>
	
	<select id="getChefApply" resultType="wh.admin.manage.model.ChefApplyDto" parameterType="int">
		select * from chef_apply natural join members limit #{start}, 10
	</select>
	
	<insert id="allowChefUp" parameterType="wh.admin.manage.model.ChefApplyDto">
		insert into chef(chef,tel,sns_address) values(#{member_id},#{tel},#{sns_address})
	</insert>
	
	<update id="upLevel" parameterType="string">
		update members set level = 2 where member_id = #{member_id}
	</update>
	
	<delete id="denyChefUp" parameterType="string">
		delete from chef_apply where member_id = #{member_id}
	</delete>
	<!-- 셰프 신청서 리스트 끝 -->
	
	<!-- 전체 레시피 리스트 -->
	<select id="getRecipeList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.AdminRecipeDto">
		select * from recipe_info
		<where>
		<if test='filter == "member_id"'>
		 member_id 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "recipe_name"'>
		 and recipe_name
		  like CONCAT('%',#{search},'%')
 		</if>	
		</where>
		order by recipe_id limit #{start}, 10
	</select>
	
	<select id="getRecipeCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from recipe_info
		<where>
		<if test='filter == "recipe_name"'>
		  recipe_name
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
		</where>
	</select>
	<!-- 전체 레시피 끝 -->
	
	<!-- 유료 레시피 -->
	<select id="getPayList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.AdminRecipeDto">
		select * from recipe_info
		<where>
		<if test='filter == "member_id"'>
		 member_id 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "recipe_name"'>
		 and recipe_name
		  like CONCAT('%',#{search},'%')
 		</if>
 		price not in(0)	
		</where>
		order by recipe_id limit #{start}, 10
	</select>
	
	<select id="getPayCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from recipe_info
		<where>
		<if test='filter == "recipe_name"'>
		  recipe_name
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
 		price not in(0)
		</where>
	</select>
	<!-- 유료 레시피  끝 -->
	
	<!-- 삭제 레시피 -->
	<select id="getDelRecipeList" resultType="wh.admin.manage.model.DelRecipeDto" parameterType="wh.admin.manage.model.FilterDto">
		select * from del_recipe
		<where>
		<if test='filter == "recipe_name"'>
		 recipe_name 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "member_id"'>
		 and member_id 
		  like CONCAT('%',#{search},'%')
 		</if>	
		</where>
		order by del_date limit #{start}, 10
	</select>
	
	<select id="getDelCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from del_recipe
		<where>
		<if test='filter == "recipe_name"'>
		  recipe_name
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
		</where>
	</select>
	<!-- 삭제 레시피 끝 -->
	
	
	<!-- 레시피 삭제 -->
	<delete id="deleteRecipe" parameterType="int">
		delete from recipe_info where recipe_id = #{recipe_id}
	</delete>
	
	<insert id="insertDelRecipe" parameterType="wh.admin.manage.model.DelRecipeDto">
		insert into Del_Recipe(recipe_id,image,member_id,recipe_name,reason) value(#{recipe_id},#{image},#{member_id},#{recipe_name},#{reason})
	</insert>
	<!-- 레시피 삭제 끝 -->
	
	<!-- 레시피 구매 내역 -->
	<select id="getPurRecipeList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.PurchaseRecipeDto">
		select * from pur_recipe natural join recipe_info natural join members
		<where>
		<if test='filter == "recipe_name"'>
		 recipe_name 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "member_id"'>
		 and member_id 
		  like CONCAT('%',#{search},'%')
 		</if>
 		<if test='filter == "nickname"'>
 		and nickname 
		  like CONCAT('%',#{search},'%')
 		</if>
		</where>
		order by pur_date limit #{start}, 10
	</select>
	
	<select id="getPurRecipeCount" resultType="int" parameterType="wh.admin.manage.model.FilterDto">
		select count(*) from pur_recipe natural join recipe_info natural join members
		<where>
		<if test='filter == "recipe_name"'>
		  recipe_name
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "nickname"'>
 		and nickname 
		  like CONCAT('%',#{search},'%')
		 </if>
		</where>
	</select>
	<!-- 구매 내역 끝 -->
	
	<!-- 결제 내역 리스트 -->
	<select id="getPaymentList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.PayListDto">
		select * from pay_list p
		<where>
		<!-- fork일때 -->
		<if test='type == "fork"'>
		<if test='filter == "member_id"'>
		 member_id 
		 like CONCAT('%',#{search},'%')
		 and fork > 0
		 order by fork_date limit #{start}, 10
 		 </if>
 		</if>
 		</where>
 		
 		<!-- class일때 -->
 		<if test='type == "class"'>
 		 join class_student s join cooking_class c join members m on p.member_id = s.member_id and s.c_num = c.c_num and c.chef = m.member_id
 		 <where>
 		 <if test='filter == "member_id"'>
		 member_id 
		 like CONCAT('%',#{search},'%')
		 and class_price > 0
		 </if>
		 <if test='filter == "className"'>
		 c_name 
		 like CONCAT('%',#{search},'%')
		 and class_price > 0
		 </if>
		 </where>
 		 order by class_date limit #{start}, 10	
 		</if>
 		
		
		
	</select>
	
	
	
	<select id="getPaymentCount" parameterType="wh.admin.manage.model.FilterDto" resultType="int">
		select count(*) from pay_list p
		<where>
		<if test='type == "fork"'>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%')
		  and fork > 0
 		</if>
 		</if>
 		</where>
 		
 		
 		
 		<if test='type == "class"'>
 		join class_student s join cooking_class c join members m on p.member_id = s.member_id and s.c_num = c.c_num and c.chef = m.member_id
 		<where>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%')
		  and class_price > 0
 		</if>
 		
 		<if test='filter == "className"'>
		 c_name 
		 like CONCAT('%',#{search},'%')
		 and class_price > 0
		 </if>
		 </where>
 		</if>
		
	</select>
	<!-- 결제 내역 리스트 끝 -->
	
	
	
	<!-- 공지사항 -->
	<select id="getNotifyList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.NotifyDto">
		select * from notify
		<where>
		<if test='filter == "member_id"'>
		 member_id 
		 like CONCAT('%',#{search},'%')
 		</if>
 		 <if test='filter == "subject"'>
		 subject 
		 like CONCAT('%',#{search},'%')
		 </if>
		 <if test='filter == "content"'>
		 content 
		 like CONCAT('%',#{search},'%')
		 </if>
		 </where>
 		 order by num limit #{start}, 10	

	</select>
	
	
	
	<select id="getNotifyCount" parameterType="wh.admin.manage.model.FilterDto" resultType="int">
		select count(*) from notify
		<where>
		<if test='filter == "subject"'>
		  subject
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "member_id"'>
		  member_id
		  like CONCAT('%',#{search},'%') 
 		</if>
 		<if test='filter == "content"'>
		  content
		  like CONCAT('%',#{search},'%') 
 		</if>
		</where>
	</select>
	
	<insert id="insertNotify" parameterType="wh.admin.manage.model.NotifyDto">
		insert into notify(subject,content,member_id) values(#{subject},#{content},#{member_id})
	</insert>
	
	<update id="updateNotify" parameterType="wh.admin.manage.model.NotifyDto">
		update notify set subject = #{subject}, content = #{content}, member_id = #{member_id} where 'num' = #{num}
	</update>
	
	
	
	
	
	
	<!-- 쿠킹 클래스 리스트 -->
	<select id="getClassList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.CookingClassDto">
		select * from cooking_class inner join members on chef = member_id
		<where>
		<if test='filter == "c_name"'>
		 c_name
		  like CONCAT('%',#{search},'%')
 		</if>
 		
 		<if test='filter == "nickname"'>
 		nickname 
		  like CONCAT('%',#{search},'%')
 		</if>
 		and recruit = 'true'
		</where>
		order by reg_date limit #{start}, 10
	</select>
	
	<select id="getClassCount" parameterType="wh.admin.manage.model.FilterDto" resultType="int">
		select count(*) from cooking_class inner join members on chef = member_id
		<where>
		<if test='filter == "c_name"'>
		  c_name
		  like CONCAT('%',#{search},'%') 
 		</if>
 		
 		<if test='filter == "nickname"'>
 		  nickname 
		  like CONCAT('%',#{search},'%')
		 </if>
		 and recruit = 'true'
		</where>
	</select>
	
	<select id="getClass" parameterType="int" resultType="wh.admin.manage.model.CookingClassDto">
		select * from cooking_class where c_num = #{c_num}
	</select>
	
	<select id="getClassPersonCount" parameterType="map" resultType="int">
		select Count(*) from class_student natural join members where c_num = #{c_num}
		<if test='start != "-1"'>
			order by reg_date limit #{start}, 10
		</if>
	</select>
	
	<insert id="regClass" parameterType="map">
		insert into cooking_class(c_name,price,chef,period_start,period_end,content,personnel,recruit) values(#{c_name},#{price},#{chef},#{period_start},#{period_end},#{content},#{personnel},#{recruit})
	</insert>
	
	<update id="updateClass" parameterType="map">
		update cooking_class set c_name = #{c_name}, price = #{price}, chef = #{chef},period_start = #{period_start}, period_end = #{period_end},content = #{content},personnel = #{personnel},recruit = #{recruit} where c_num = #{c_num}
	</update>
	<!-- 쿠킹 클래스 리스트 끝 -->
	
	<!-- 강사 모집 리스트 -->
	<select id="getRecruitList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.CookingClassDto">
		select * from cooking_class
		<where>
		<if test='filter == "c_name"'>
		 c_name
		  like CONCAT('%',#{search},'%')
 		</if>
 		and recruit = 'false'
		</where>
		order by reg_date limit #{start}, 10
	</select>
	
	<select id="getRecruitCount" parameterType="wh.admin.manage.model.FilterDto" resultType="int">
		select count(*) from cooking_class
		<where>
		<if test='filter == "c_name"'>
		  c_name
		  like CONCAT('%',#{search},'%') 
 		</if>
		 and recruit = 'false'
		</where>
	</select>
	
	<select id="getRecruit" parameterType="int" resultType="wh.admin.manage.model.CookingClassDto">
		select * from cooking_class where c_num = #{c_num}
	</select>
	
	<select id="getRecruitPersonCount" parameterType="map" resultType="int">
		select Count(*) from class_apply inner join members on member_id = chef where c_num = #{c_num}
		<if test='start != "-1"'>
			order by chef limit #{start}, 10
		</if>
	</select>
	
	<insert id="regRecruit" parameterType="map">
		insert into cooking_class(c_name,price,chef,period_start,period_end,content,personnel,recruit) values(#{c_name},#{price},#{chef},#{period_start},#{period_end},#{content},#{personnel},#{recruit})
	</insert>
	
	<update id="updateRecruit" parameterType="map">
		update cooking_class set c_name = #{c_name}, price = #{price}, chef = #{chef},period_start = #{period_start}, period_end = #{period_end},content = #{content},personnel = #{personnel},recruit = #{recruit} where c_num = #{c_num}
	</update>
	
	
	
	
<!-- 	클래스 계획서 리스트
 -->	<select id="getApplyList" parameterType="wh.admin.manage.model.FilterDto" resultType="wh.admin.manage.model.TeacherApply">
		select * from class_apply where c_num=#{c_num} order by chef limit #{start}, 10
	</select>
	
	<select id="getApplyCount" parameterType="int" resultType="int">
		select count(*) from class_apply where c_num=#{c_num} 
	</select>
</mapper>